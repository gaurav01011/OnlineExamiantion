/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nlt.view;

import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.nlt.include.Config;
import org.nlt.model.Objectives;
import org.nlt.model.Users;
import org.nlt.services.ObjectiveServices;
import org.nlt.services.UserServices;

/**
 *
 * @author Giridhar
 */
public class ObjectiveFrame extends javax.swing.JInternalFrame {

    private Objectives objective;

    /**
     * Creates new form ObjectiveFrame
     */
    public ObjectiveFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        QuestionTextArea = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        optionaTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        optionBTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        optionCTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        optionDTextArea = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        optionAradioButton = new javax.swing.JRadioButton();
        optionBradioButton = new javax.swing.JRadioButton();
        optionCradioButton = new javax.swing.JRadioButton();
        optionDradioButton = new javax.swing.JRadioButton();
        markSpinField = new com.toedter.components.JSpinField();
        questiontypeComboBox = new javax.swing.JComboBox<>();
        submitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        testobjectiveQuestionTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        practiceobjectiveQuestionTable = new javax.swing.JTable();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 51, 51))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(QuestionTextArea)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(QuestionTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Option A", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(optionaTextField)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionaTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Option B", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(optionBTextField)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionBTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Option C", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(optionCTextField)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionCTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Option D", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(optionDTextArea)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionDTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Marks & Answer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        buttonGroup1.add(optionAradioButton);
        optionAradioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optionAradioButton.setText("Option A");

        buttonGroup1.add(optionBradioButton);
        optionBradioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optionBradioButton.setText("Option B");

        buttonGroup1.add(optionCradioButton);
        optionCradioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optionCradioButton.setText("Option C");

        buttonGroup1.add(optionDradioButton);
        optionDradioButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        optionDradioButton.setText("Option D");

        questiontypeComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        questiontypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Practice", "Test Exam" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(markSpinField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(optionAradioButton)
                .addGap(18, 18, 18)
                .addComponent(optionBradioButton)
                .addGap(10, 10, 10)
                .addComponent(optionCradioButton)
                .addGap(10, 10, 10)
                .addComponent(optionDradioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(questiontypeComboBox, 0, 90, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(optionAradioButton)
                            .addComponent(optionBradioButton)
                            .addComponent(optionCradioButton)
                            .addComponent(optionDradioButton)
                            .addComponent(questiontypeComboBox))
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addComponent(markSpinField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        submitButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setText("DELETE");

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resetButton.setText("RESET");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        testobjectiveQuestionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        testobjectiveQuestionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testobjectiveQuestionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(testobjectiveQuestionTable);

        jPanel2.add(jScrollPane1);

        practiceobjectiveQuestionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        practiceobjectiveQuestionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                practiceobjectiveQuestionTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(practiceobjectiveQuestionTable);

        jPanel2.add(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        try {
            String question = QuestionTextArea.getText();
            String option1 = optionaTextField.getText();
            String option2 = optionBTextField.getText();
            String option3 = optionCTextField.getText();
            String option4 = optionDTextArea.getText();
            String answer = "";

            int status = 0;
            if (questiontypeComboBox.getSelectedItem().toString().equals("Test Exam")) {
                status = 1;
            } else if (questiontypeComboBox.getSelectedItem().toString().equals("Practice")) {
                status = 2;
            }

            if (status == 1 && Config.testQuestionobjectiveMap.containsKey(question) || status == 2 && Config.practicequestionobjectiveMap.containsKey(question)) {
                JOptionPane.showMessageDialog(this, "Question already Exist!", "Question frame", JOptionPane.ERROR_MESSAGE);
            } else {
                if (optionAradioButton.isSelected()) {
                    answer = option1;
                } else if (optionBradioButton.isSelected()) {
                    answer = option2;
                } else if (optionCradioButton.isSelected()) {
                    answer = option3;
                } else if (optionDradioButton.isSelected()) {
                    answer = option4;
                }
                if (question.isEmpty() || option1.isEmpty() || option2.isEmpty() || option3.isEmpty() || option4.isEmpty() || answer.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Invalid Entry", "Objective frame", JOptionPane.ERROR_MESSAGE);

                } else {

                    Objectives objective = new Objectives();
                    objective.setAnswer(answer);
                    objective.setOption1(option1);
                    objective.setOption2(option2);
                    objective.setOption3(option3);
                    objective.setOption4(option4);
                    objective.setQuestion(question);
                    objective.setMarks(markSpinField.getValue());
                    objective.setStatus(status);
                    objective.setCreated(new Date());
                    objective.setModified(new Date());
                    ObjectiveServices.addObjective(objective);
                    JOptionPane.showMessageDialog(this, "Question Added", "Objective frame", JOptionPane.INFORMATION_MESSAGE);

                    Config.mainframe.setTestObjectiveMap();
                    Config.mainframe.setPracticeObjectiveMap();

                    Config.objectiveframe.setTestTableData();
                    resetData();

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void testobjectiveQuestionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testobjectiveQuestionTableMouseClicked
        // TODO add your handling code here:
        try {
            String question = testobjectiveQuestionTable.getValueAt(testobjectiveQuestionTable.getSelectedRow(), 0).toString();
            objective = Config.testQuestionobjectiveMap.get(question);
            if (objective != null) {
                QuestionTextArea.setText(objective.getQuestion());
                optionaTextField.setText(objective.getOption1());
                optionBTextField.setText(objective.getOption2());
                optionCTextField.setText(objective.getOption3());
                optionDTextArea.setText(objective.getOption4());
                if (objective.getAnswer().equals(objective.getOption1())) {
                    optionAradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption2())) {
                    optionBradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption3())) {
                    optionCradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption4())) {
                    optionDradioButton.setSelected(true);

                }
                markSpinField.setValue(objective.getMarks());
                questiontypeComboBox.setSelectedItem("Test Exam");

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_testobjectiveQuestionTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (objective == null) {
                JOptionPane.showMessageDialog(this, "please select question to update", "Objective frame", JOptionPane.ERROR_MESSAGE);

            } else {
                String question = QuestionTextArea.getText();
                String option1 = optionaTextField.getText();
                String option2 = optionBTextField.getText();
                String option3 = optionCTextField.getText();
                String option4 = optionDTextArea.getText();
                String answer = "";

                int status = 0;
                if (questiontypeComboBox.getSelectedItem().toString().equals("Test Exam")) {
                    status = 1;
                } else if (questiontypeComboBox.getSelectedItem().toString().equals("Practice")) {
                    status = 2;
                }

                if (optionAradioButton.isSelected()) {
                    answer = option1;
                } else if (optionBradioButton.isSelected()) {
                    answer = option2;
                } else if (optionCradioButton.isSelected()) {
                    answer = option3;
                } else if (optionDradioButton.isSelected()) {
                    answer = option4;
                }
                objective.setAnswer(answer);
                objective.setMarks(markSpinField.getValue());
                objective.setOption1(option1);
                objective.setOption2(option2);
                objective.setOption3(option3);
                objective.setOption4(option4);
                objective.setQuestion(question);
                objective.setStatus(status);

                ObjectiveServices.updateObjective(objective);
                JOptionPane.showMessageDialog(this, "Question updated", "Objective frame", JOptionPane.INFORMATION_MESSAGE);

                Config.mainframe.setTestObjectiveMap();
                Config.mainframe.setPracticeObjectiveMap();

                Config.objectiveframe.setTestTableData();
                Config.objectiveframe.setPracticeTableData();

                resetData();

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void practiceobjectiveQuestionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_practiceobjectiveQuestionTableMouseClicked
        // TODO add your handling code here:
        try {
            String question = practiceobjectiveQuestionTable.getValueAt(practiceobjectiveQuestionTable.getSelectedRow(), 0).toString();
            objective = Config.practicequestionobjectiveMap.get(question);
            if (objective != null) {
                QuestionTextArea.setText(objective.getQuestion());
                optionaTextField.setText(objective.getOption1());
                optionBTextField.setText(objective.getOption2());
                optionCTextField.setText(objective.getOption3());
                optionDTextArea.setText(objective.getOption4());
                if (objective.getAnswer().equals(objective.getOption1())) {
                    optionAradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption2())) {
                    optionBradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption3())) {
                    optionCradioButton.setSelected(true);

                } else if (objective.getAnswer().equals(objective.getOption4())) {
                    optionDradioButton.setSelected(true);

                }
                markSpinField.setValue(objective.getMarks());
                questiontypeComboBox.setSelectedItem("Practice");

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_practiceobjectiveQuestionTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField QuestionTextArea;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.components.JSpinField markSpinField;
    private javax.swing.JRadioButton optionAradioButton;
    private javax.swing.JTextField optionBTextField;
    private javax.swing.JRadioButton optionBradioButton;
    private javax.swing.JTextField optionCTextField;
    private javax.swing.JRadioButton optionCradioButton;
    private javax.swing.JTextField optionDTextArea;
    private javax.swing.JRadioButton optionDradioButton;
    private javax.swing.JTextField optionaTextField;
    private javax.swing.JTable practiceobjectiveQuestionTable;
    private javax.swing.JComboBox<String> questiontypeComboBox;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTable testobjectiveQuestionTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    public void setTestTableData() {
        try {
            //only student object we are returning
            Collection<Objectives> objectiveValues = Config.testQuestionobjectiveMap.values();
            int i = 0;
            String[] cols = {"QUE", "OP1", "OP2", "OP3", "OP4", "ANS", "MARKS"};
            String[][] data = new String[objectiveValues.size()][cols.length];
            for (Objectives objective : objectiveValues) {
                data[i][0] = objective.getQuestion();
                data[i][1] = objective.getOption1();
                data[i][2] = objective.getOption2();
                data[i][3] = objective.getOption3();
                data[i][4] = objective.getOption4();
                data[i][5] = objective.getAnswer();
                data[i][6] = objective.getMarks() + "";
                i++;

            }
            DefaultTableModel model = new DefaultTableModel(data, cols);
            testobjectiveQuestionTable.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void setPracticeTableData() {
        try {
            //only student object we are returning
            Collection<Objectives> objectiveValues = Config.practicequestionobjectiveMap.values();
            int i = 0;
            String[] cols = {"QUE", "OP1", "OP2", "OP3", "OP4", "ANS", "MARKS"};
            String[][] data = new String[objectiveValues.size()][cols.length];
            for (Objectives objective : objectiveValues) {
                data[i][0] = objective.getQuestion();
                data[i][1] = objective.getOption1();
                data[i][2] = objective.getOption2();
                data[i][3] = objective.getOption3();
                data[i][4] = objective.getOption4();
                data[i][5] = objective.getAnswer();
                data[i][6] = objective.getMarks() + "";
                i++;

            }
            DefaultTableModel model = new DefaultTableModel(data, cols);
            practiceobjectiveQuestionTable.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Objective frame", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resetData() {
        QuestionTextArea.setText("");
        optionaTextField.setText("");
        optionBTextField.setText("");
        optionCTextField.setText("");
        optionDTextArea.setText("");
    }
}
